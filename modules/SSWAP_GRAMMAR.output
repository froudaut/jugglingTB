Rules:
------
0:	$start -> input $end
1:	input -> SS
2:	input -> SS_extend SS
3:	input -> lexerror
4:	SS -> SS_unitary
5:	SS -> SS_unitary SS_extend
6:	SS -> SS_unitary SS
7:	SS -> SS_unitary SS_extend SS
8:	SS_extend -> '*'
9:	SS_extend -> '*' SS_extend
10:	SS_extend -> '!'
11:	SS_extend -> '!' SS_extend
12:	SS_unitary -> SS_async
13:	SS_unitary -> SS_sync
14:	SS_async -> value
15:	SS_async -> '[' SS_vanilla ']'
16:	SS_vanilla -> value
17:	SS_vanilla -> value SS_vanilla
18:	SS_multisync_in_sync -> SS_async
19:	SS_multisync_in_sync -> SS_async SS_extend
20:	SS_multisync_in_sync -> SS_async SS_multisync_in_sync
21:	SS_multisync_in_sync -> SS_async SS_extend SS_multisync_in_sync
22:	SS_sync -> '(' SS_multisync_in_sync ',' SS_multisync_in_sync ')'
23:	value -> digit
24:	value -> digit 'x'
25:	value -> digit 'X'

States:
-------
State 0:

	$start -> . input $end	(Rule 0)

	'!'	shift, and go to state 3
	'('	shift, and go to state 6
	'*'	shift, and go to state 1
	'['	shift, and go to state 2
	digit	shift, and go to state 11
	lexerror	shift, and go to state 10

	value	go to state 9
	SS	go to state 12
	input	go to state 4
	SS_unitary	go to state 13
	SS_extend	go to state 5
	SS_sync	go to state 7
	SS_async	go to state 8

State 1:

	SS_extend -> '*' .	(Rule 8)
	SS_extend -> '*' . SS_extend	(Rule 9)

	'!'	shift, and go to state 3
	'*'	shift, and go to state 1

	$default	reduce using rule 8 (SS_extend)

	SS_extend	go to state 14

State 2:

	SS_async -> '[' . SS_vanilla ']'	(Rule 15)

	digit	shift, and go to state 11

	value	go to state 15
	SS_vanilla	go to state 16

State 3:

	SS_extend -> '!' .	(Rule 10)
	SS_extend -> '!' . SS_extend	(Rule 11)

	'!'	shift, and go to state 3
	'*'	shift, and go to state 1

	$default	reduce using rule 10 (SS_extend)

	SS_extend	go to state 17

State 4:

	$start -> input . $end	(Rule 0)

	$end	shift, and go to state 18

State 5:

	input -> SS_extend . SS	(Rule 2)

	'('	shift, and go to state 6
	'['	shift, and go to state 2
	digit	shift, and go to state 11

	SS_unitary	go to state 13
	SS_async	go to state 8
	SS	go to state 19
	SS_sync	go to state 7
	value	go to state 9

State 6:

	SS_sync -> '(' . SS_multisync_in_sync ',' SS_multisync_in_sync ')'	(Rule 22)

	'['	shift, and go to state 2
	digit	shift, and go to state 11

	SS_multisync_in_sync	go to state 21
	SS_async	go to state 20
	value	go to state 9

State 7:

	SS_unitary -> SS_sync .	(Rule 13)

	$default	reduce using rule 13 (SS_unitary)

State 8:

	SS_unitary -> SS_async .	(Rule 12)

	$default	reduce using rule 12 (SS_unitary)

State 9:

	SS_async -> value .	(Rule 14)

	$default	reduce using rule 14 (SS_async)

State 10:

	input -> lexerror .	(Rule 3)

	$default	reduce using rule 3 (input)

State 11:

	value -> digit .	(Rule 23)
	value -> digit . 'x'	(Rule 24)
	value -> digit . 'X'	(Rule 25)

	'X'	shift, and go to state 23
	'x'	shift, and go to state 22

	$default	reduce using rule 23 (value)

State 12:

	input -> SS .	(Rule 1)

	$default	reduce using rule 1 (input)

State 13:

	SS -> SS_unitary .	(Rule 4)
	SS -> SS_unitary . SS_extend	(Rule 5)
	SS -> SS_unitary . SS	(Rule 6)
	SS -> SS_unitary . SS_extend SS	(Rule 7)

	'!'	shift, and go to state 3
	'('	shift, and go to state 6
	'*'	shift, and go to state 1
	'['	shift, and go to state 2
	digit	shift, and go to state 11

	$default	reduce using rule 4 (SS)

	SS_async	go to state 8
	SS_sync	go to state 7
	SS_extend	go to state 24
	SS_unitary	go to state 13
	SS	go to state 25
	value	go to state 9

State 14:

	SS_extend -> '*' SS_extend .	(Rule 9)

	$default	reduce using rule 9 (SS_extend)

State 15:

	SS_vanilla -> value .	(Rule 16)
	SS_vanilla -> value . SS_vanilla	(Rule 17)

	digit	shift, and go to state 11

	$default	reduce using rule 16 (SS_vanilla)

	SS_vanilla	go to state 26
	value	go to state 15

State 16:

	SS_async -> '[' SS_vanilla . ']'	(Rule 15)

	']'	shift, and go to state 27

State 17:

	SS_extend -> '!' SS_extend .	(Rule 11)

	$default	reduce using rule 11 (SS_extend)

State 18:

	$start -> input $end .	(Rule 0)

	$default	accept

State 19:

	input -> SS_extend SS .	(Rule 2)

	$default	reduce using rule 2 (input)

State 20:

	SS_multisync_in_sync -> SS_async .	(Rule 18)
	SS_multisync_in_sync -> SS_async . SS_extend	(Rule 19)
	SS_multisync_in_sync -> SS_async . SS_multisync_in_sync	(Rule 20)
	SS_multisync_in_sync -> SS_async . SS_extend SS_multisync_in_sync	(Rule 21)

	'!'	shift, and go to state 3
	'*'	shift, and go to state 1
	'['	shift, and go to state 2
	digit	shift, and go to state 11

	$default	reduce using rule 18 (SS_multisync_in_sync)

	SS_extend	go to state 29
	value	go to state 9
	SS_async	go to state 20
	SS_multisync_in_sync	go to state 28

State 21:

	SS_sync -> '(' SS_multisync_in_sync . ',' SS_multisync_in_sync ')'	(Rule 22)

	','	shift, and go to state 30

State 22:

	value -> digit 'x' .	(Rule 24)

	$default	reduce using rule 24 (value)

State 23:

	value -> digit 'X' .	(Rule 25)

	$default	reduce using rule 25 (value)

State 24:

	SS -> SS_unitary SS_extend .	(Rule 5)
	SS -> SS_unitary SS_extend . SS	(Rule 7)

	'('	shift, and go to state 6
	'['	shift, and go to state 2
	digit	shift, and go to state 11

	$default	reduce using rule 5 (SS)

	value	go to state 9
	SS_sync	go to state 7
	SS	go to state 31
	SS_async	go to state 8
	SS_unitary	go to state 13

State 25:

	SS -> SS_unitary SS .	(Rule 6)

	$default	reduce using rule 6 (SS)

State 26:

	SS_vanilla -> value SS_vanilla .	(Rule 17)

	$default	reduce using rule 17 (SS_vanilla)

State 27:

	SS_async -> '[' SS_vanilla ']' .	(Rule 15)

	$default	reduce using rule 15 (SS_async)

State 28:

	SS_multisync_in_sync -> SS_async SS_multisync_in_sync .	(Rule 20)

	$default	reduce using rule 20 (SS_multisync_in_sync)

State 29:

	SS_multisync_in_sync -> SS_async SS_extend .	(Rule 19)
	SS_multisync_in_sync -> SS_async SS_extend . SS_multisync_in_sync	(Rule 21)

	'['	shift, and go to state 2
	digit	shift, and go to state 11

	$default	reduce using rule 19 (SS_multisync_in_sync)

	SS_async	go to state 20
	SS_multisync_in_sync	go to state 32
	value	go to state 9

State 30:

	SS_sync -> '(' SS_multisync_in_sync ',' . SS_multisync_in_sync ')'	(Rule 22)

	'['	shift, and go to state 2
	digit	shift, and go to state 11

	value	go to state 9
	SS_multisync_in_sync	go to state 33
	SS_async	go to state 20

State 31:

	SS -> SS_unitary SS_extend SS .	(Rule 7)

	$default	reduce using rule 7 (SS)

State 32:

	SS_multisync_in_sync -> SS_async SS_extend SS_multisync_in_sync .	(Rule 21)

	$default	reduce using rule 21 (SS_multisync_in_sync)

State 33:

	SS_sync -> '(' SS_multisync_in_sync ',' SS_multisync_in_sync . ')'	(Rule 22)

	')'	shift, and go to state 34

State 34:

	SS_sync -> '(' SS_multisync_in_sync ',' SS_multisync_in_sync ')' .	(Rule 22)

	$default	reduce using rule 22 (SS_sync)


Summary:
--------
Number of rules         : 26
Number of terminals     : 12
Number of non-terminals : 10
Number of states        : 35
